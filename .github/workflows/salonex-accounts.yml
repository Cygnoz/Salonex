name: Deploy to Ubuntu Server - Accounts

on:
  push:
    branches:
      - Accounts

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF_SSH'
            set -e  # Stop on errors

            # Navigate to project directory
            cd ~/Salonex
            
            # Ensure we're on the correct branch and fetch updates
            git fetch --all
            git reset --hard origin/Accounts
            
            # Remove old Docker container if it exists
            docker rm -f salonex-accounts || true

            # Remove old Docker image to free space
            docker rmi salonex-accounts || true

            # Create a fresh Dockerfile dynamically
            cat << 'DOCKERFILE' > Dockerfile
            FROM node:22.11.0
            WORKDIR /usr/src/app
            COPY package*.json ./
            RUN npm install
            COPY . .
            EXPOSE 6001
            CMD ["node", "server.js"]
            DOCKERFILE

            # Build and run the new container
            docker build -t salonex-accounts .
            docker run -d --name salonex-accounts -p 1001:6001 salonex-accounts

            # Clean up temporary Dockerfile
            rm Dockerfile
          EOF_SSH
        shell: bash
